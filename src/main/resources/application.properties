spring.application.name=marketplace
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.graphql.schema.locations=classpath:/graphql
spring.graphql.schema.generation.enabled=true
spring.graphql.enabled=true
spring.graphql.graphiql.enabled=true
graphql.servlet.mapping=/graphql
graphql.servlet.enabled=true
graphql.servlet.cors.enabled=true
graphql.schema.location=classpath:/graphql/schema.graphqls

# B2 Cloud Storage
b2.application.key.id=00389696a4df7200000000002
b2.application.key.name=marketplace-listings
b2.application.key=K003ZxtpV8XrsMqdDL8ZThJwHLICw2Y
b2.bucket.id=9859f6d9467a547d9f570210
b2.bucket.name=Listings1579

#Email
spring.mail.host=smtp.hmailplus.com
spring.mail.port=587
spring.mail.username=info@dealio.org.za
spring.mail.password=YOUR_EMAIL_PASSWORD
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.hmailplus.com


# Flyway
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.url=${spring.datasource.url}
spring.flyway.user=${spring.datasource.username}
spring.flyway.password=${spring.datasource.password}
spring.flyway.driver-class-name=${spring.datasource.driver-class-name}
logging.level.org.flywaydb=DEBUG
spring.flyway.out-of-order=true

logging.level.org.springframework.graphql=DEBUG
logging.level.dev.marketplace.marketplace=DEBUG
logging.level.org.springframework.boot.autoconfigure.graphql=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.servlet=DEBUG

# Stripe Configuration
stripe.secret.key=${STRIPE_SECRET_KEY:sk_test_your_test_key_here}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET:whsec_your_webhook_secret_here}
stripe.publishable.key=${STRIPE_PUBLISHABLE_KEY:pk_test_your_publishable_key_here}

# App Configuration
app.base.url=${APP_BASE_URL:http://localhost:8080}
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web.cors=DEBUG

logging.level.org.springframework.jdbc=DEBUG
logging.level.org.springframework.boot.autoconfigure.jdbc=DEBUG

#logging.level.root=DEBUG
#logging.level.dev.marketplace.marketplace=DEBUG
#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.web.servlet=DEBUG
#logging.level.org.springframework.security=DEBUG
#spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# JWT secret is configured in profile-specific properties files
# jwt.secret=QWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo1NDMyMTBhYmNkZWYxMjM0NQ==
